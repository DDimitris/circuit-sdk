0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.9.5
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/roger2/github/circuit-sdk',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/roger2/.npm/circuit-sdk/1.2.1402/package.tgz not in flight; packing
9 verbose correctMkdir /Users/roger2/.npm correctMkdir not in flight; initializing
10 info lifecycle circuit-sdk@1.2.1402~prepublish: circuit-sdk@1.2.1402
11 silly lifecycle circuit-sdk@1.2.1402~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/roger2/.npm/circuit-sdk/1.2.1402/package.tgz',
12 verbose tar pack   '/Users/roger2/github/circuit-sdk' ]
13 verbose tarball /Users/roger2/.npm/circuit-sdk/1.2.1402/package.tgz
14 verbose folder /Users/roger2/github/circuit-sdk
15 verbose addLocalTarball adding from inside cache /Users/roger2/.npm/circuit-sdk/1.2.1402/package.tgz
16 verbose correctMkdir /Users/roger2/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd circuit-sdk@1.2.1402
18 verbose afterAdd /Users/roger2/.npm/circuit-sdk/1.2.1402/package/package.json not in flight; writing
19 verbose correctMkdir /Users/roger2/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/roger2/.npm/circuit-sdk/1.2.1402/package/package.json written
21 silly publish { name: 'circuit-sdk',
21 silly publish   version: '1.2.1402',
21 silly publish   description: 'Circuit Node.js SDK',
21 silly publish   main: 'circuit-node.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   author: { name: 'Unify Inc.' },
21 silly publish   contributors:
21 silly publish    [ { name: 'Roger Urscheler', email: 'roger.urscheler@unify.com' },
21 silly publish      { name: 'Rodrigo Pastro', email: 'rodrigo.pastro@unify.com' },
21 silly publish      { name: 'Johannes Ruetschi',
21 silly publish        email: 'johannes.ruetschi@unify.com' } ],
21 silly publish   license: 'Apache-2.0',
21 silly publish   homepage: 'https://github.com/circuit/circuit-sdk',
21 silly publish   engines: { node: '>= 4.5.0' },
21 silly publish   repository: { type: 'git', url: 'git://github.com/circuit/circuit-sdk.git' },
21 silly publish   bugs: { url: 'http://github.com/circuit/circuit-sdk/issues' },
21 silly publish   keywords: [ 'api', 'webrtc', 'circuit', 'collaboration', 'sdk' ],
21 silly publish   unpkg: 'dist/circuit.min.js',
21 silly publish   dependencies: { ws: '~0.8.0' },
21 silly publish   readme: 'Circuit JavaScript and Node.js SDK\n==================================\n\n[![GitHub release](https://img.shields.io/github/release/circuit/circuit-sdk.svg)](https://github.com/circuit/circuit-sdk)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n\n### Prerequisites\n* Developer account on circuitsandbox.net. Get it for free at [developer registration](https://www.circuit.com/web/developers/registration).\n* OAuth 2.0 `client_id` and optionally `client_secret`. Get if for free at [circuit.github.com/oauth](https://circuit.github.com/oauth).\n\n\n### API Reference\nhttps://circuitsandbox.net/sdk/ with most APIs described in the [Client](https://circuitsandbox.net/sdk/classes/Client.html) class.\n\nMore info at [circuit.github.io](https://circuit.github.io/).\n\n### Usage\n\n#### JavaScript\nAdd the the line below to the HTML file of you app. This will include the latest version of Circuit SDK and make the `Circuit` object available.\n```html\n<script type="text/javascript" src="https://unpkg.com/circuit-sdk"></script>\n```\n\n#### Node.js\n```bash\nnpm install --save circuit-sdk\n```\n\n### Application Types\nThe majority of apps fall in one of the three types below. Each type uses a different OAuth 2.0 Grant.\n\n1. **Client-side web applications** use the JavaScript SDK with the [OAuth 2.0 Implicit Grant](https://circuit.github.io/oauth.html#implicit).\n   ```javascript\n   // No client_secret needed for Implicit Grant. SDK will obtain access token.\n   let client = new Circuit.Client({\n     client_id: \'<your client_id>\',\n     domain: \'circuitsandbox.net\'\n   });\n   client.logon()\n     .then(user => console.log(\'Logged on as \' + user.displayName))\n   ```\n\n2. **Server-side web applications** use the JavaScript SDK (or [REST API](https://circuitsandbox.net/rest/v2/swagger/ui/index.html)) on the client, but handle the authentication flow on the server using the [OAuth 2.0 Authorization Code Grant](https://circuit.github.io/oauth.html#authorization_code). The access token is obtained on the server and then passed to the client to use in the Circuit JavaScript SDK. These apps may also use the Node.js SDK on the server side to act on behalf of the user.<br>\nExample apps: [node-linkify](https://github.com/circuit/node-linkify) or [circuit-google-assistant](https://github.com/circuit/circuit-google-assistant)\n   ```javascript\n   // access token is obtained and managed by server-side app\n   let client = new Circuit.Client({\n     client_id: \'<your client_id>\',\n     domain: \'circuitsandbox.net\'\n   });\n   client.logon({accessToken: \'<access_token>\'})\n     .then(user => console.log(\'Logged on as \' + user.displayName))\n   ```\n\n3. **Bots** use the [Node.js SDK](https://www.npmjs.com/package/circuit-sdk) or the [REST API](https://circuitsandbox.net/rest/v2/swagger/ui/index.html) and use the [OAuth 2.0 Client Credentials Grant](https://circuit.github.io/oauth.html#client_credentials). Bots are a special type of user; they don\'t login on behalf of a regular user, hence no OAuth popup asking for a user`s credentials and permissions.<br>Example apps: [xlator-bot](https://github.com/circuit/xlator-bot) or [node-sdk-example](https://github.com/circuit/node-sdk-example)\n   ```javascript\n   const Circuit = require(\'circuit-sdk\');\n   let client = new Circuit.Client({\n     client_id: \'<client_id>\',\n     client_secret: \'<client_secret>\',\n     domain: \'circuitsandbox.net\'\n   });\n   client.logon()\n     .then(user => console.log(\'Logged on as bot: \' + user.email))\n   ```\n\n\n\n### Examples\n\n> JavaScript examples are located at [/examples/js](/examples/js) with more examples on [jsbin](https://circuit.github.io/jssdk.html#jsbin).\n\n> Node.js example apps are on [github](https://github.com/circuit). A summary is listed [here](https://circuit.github.io/nodejs.html). Runkit allows playing with Node.js modules live, similar to jsbin or jsfiddle on the client. [Try it on runkit](https://runkit.com/rogeru/circuit-sdk)\n\nHere are some snippets to get you started.\n\n#### Create Group Conversation and send text message\nLogon as bot, create a group conversation with two users and send a text message.\n```javascript\nclient.logon()\n  .then(user => console.log(`Logged on as ${user.displayName}`, user))\n  .then(() => client.getUsersByEmail([\'kim.jackson@mailinator.com\', \'maeva.barnaby@mailinator.com\']))\n  .then(users => users.map(user => user.userId))\n  .then(userIds => client.createGroupConversation(userIds, \'runkit example\'))\n  .then(conv => client.addTextItem(conv.convId, \'I am test bot. What can I do for you?\'))\n  .then(client.logout)\n  .catch(console.error)\n```\n\n#### Get Conversations\nGet 10 newest conversations of logged on user.\n```javascript\nclient.getConversations({numberOfConversations: 10})\n  .then(conversations => console.log(`Retrieved ${conversations.length} conversations`))\n```\n\n#### Video call with another Circuit user\nStart a video call with another user. Create conversation if not yet existing.\n> Only applicable to JavaScript SDK and only on browsers supporting WebRTC\n```javascript\nclient.makeCall(\'bob@company.com\', {audio: true, video: true}, true)\n  .then(call => console.log(\'New call: \', call));\n```\n\n#### Listen for events\n```javascript\n// Register new items added to the feed of this user. E.g. incoming text message\nclient.addEventListener(\'itemAdded\', item =>\n  console.log(\'itemAdded event received:\', item));\n\n// Register for connection state changes\nclient.addEventListener(\'connectionStateChanged\', evt => {\n  console.log(`New state is ${evt.state}`);\n});\n\n// Register and log all events\nCircuit.supportedEvents.forEach(e => client.addEventListener(e, console.log));\n```\n\n#### Create an injector\nInjectors allow extending the conversation, item and user objects within the SDK.\nIn this example a new attribute `teaser` is created on the item object. This `teaser` will be added to item objects in any reponse or event from the SDK.\n```javascript\nCircuit.Injectors.itemInjector = function (item) {\n  if (item.type === Circuit.Enums.ConversationItemType.TEXT) {\n    // Create item.teaser attribute with replacing br and hr tags with a space\n    item.teaser = item.text.content.replace(/<(br[\\/]?|\\/li|hr[\\/]?)>/gi, \' \');\n  } else {\n    item.teaser = item.type;\n  }\n};\n```\n\n### Supported Browsers\nChrome and Firefox are officially supported.\n\n### Help us improve the SDK\nHelp us improve the SDK or examples by sending us a pull-request or opening a [GitHub Issue](https://github.com/circuit/circuit-sdk/issues/new).\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'aae6cbb56de683641927dab30b625c70d3a2410a',
21 silly publish   _id: 'circuit-sdk@1.2.1402',
21 silly publish   _shasum: '8ea81662e8049da389349da0ba4e6ff4916d1491',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name circuit-sdk
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'circuit-sdk',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'circuit-sdk',
26 silly mapToRegistry   name: 'circuit-sdk',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/circuit-sdk
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/roger2/.npm/circuit-sdk/1.2.1402/package.tgz
30 verbose request uri https://registry.npmjs.org/circuit-sdk
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 8:11:14 AM
33 verbose request using bearer token for auth
34 verbose request id 1a1450ee2550f4fe
35 http request PUT https://registry.npmjs.org/circuit-sdk
36 http 403 https://registry.npmjs.org/circuit-sdk
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '94',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Fri, 25 Aug 2017 12:11:18 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-yyz8326-YYZ',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1503663075.922710,VS0,VE3710',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /Users/roger2/.npm/registry.npmjs.org/circuit-sdk on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published version 1.2.1402. : circuit-sdk
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid circuit-sdk
43 verbose cwd /Users/roger2/github/circuit-sdk
44 error Darwin 16.4.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.9.5
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published version 1.2.1402. : circuit-sdk
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
